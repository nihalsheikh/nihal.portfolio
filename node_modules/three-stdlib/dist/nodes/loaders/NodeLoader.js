"use strict";
const THREE = require("three");
const ArrayUniformNode = require("../core/ArrayUniformNode.js");
const AttributeNode = require("../core/AttributeNode.js");
const BypassNode = require("../core/BypassNode.js");
const CodeNode = require("../core/CodeNode.js");
const ConstNode = require("../core/ConstNode.js");
const ContextNode = require("../core/ContextNode.js");
const ExpressionNode = require("../core/ExpressionNode.js");
const FunctionCallNode = require("../core/FunctionCallNode.js");
const FunctionNode = require("../core/FunctionNode.js");
const Node = require("../core/Node.js");
const NodeAttribute = require("../core/NodeAttribute.js");
const NodeBuilder = require("../core/NodeBuilder.js");
const NodeCode = require("../core/NodeCode.js");
const NodeFrame = require("../core/NodeFrame.js");
const NodeFunctionInput = require("../core/NodeFunctionInput.js");
const NodeKeywords = require("../core/NodeKeywords.js");
const NodeUniform = require("../core/NodeUniform.js");
const NodeVar = require("../core/NodeVar.js");
const NodeVary = require("../core/NodeVary.js");
const PropertyNode = require("../core/PropertyNode.js");
const TempNode = require("../core/TempNode.js");
const UniformNode = require("../core/UniformNode.js");
const VarNode = require("../core/VarNode.js");
const VaryNode = require("../core/VaryNode.js");
const BufferNode = require("../accessors/BufferNode.js");
const CameraNode = require("../accessors/CameraNode.js");
const CubeTextureNode = require("../accessors/CubeTextureNode.js");
const MaterialNode = require("../accessors/MaterialNode.js");
const MaterialReferenceNode = require("../accessors/MaterialReferenceNode.js");
const ModelNode = require("../accessors/ModelNode.js");
const ModelViewProjectionNode = require("../accessors/ModelViewProjectionNode.js");
const NormalNode = require("../accessors/NormalNode.js");
const Object3DNode = require("../accessors/Object3DNode.js");
const PointUVNode = require("../accessors/PointUVNode.js");
const PositionNode = require("../accessors/PositionNode.js");
const ReferenceNode = require("../accessors/ReferenceNode.js");
const ReflectNode = require("../accessors/ReflectNode.js");
const SkinningNode = require("../accessors/SkinningNode.js");
const TextureNode = require("../accessors/TextureNode.js");
const UVNode = require("../accessors/UVNode.js");
const ColorSpaceNode = require("../display/ColorSpaceNode.js");
const NormalMapNode = require("../display/NormalMapNode.js");
const MathNode = require("../math/MathNode.js");
const OperatorNode = require("../math/OperatorNode.js");
const CondNode = require("../math/CondNode.js");
const LightContextNode = require("../lights/LightContextNode.js");
const LightNode = require("../lights/LightNode.js");
const LightsNode = require("../lights/LightsNode.js");
const ArrayElementNode = require("../utils/ArrayElementNode.js");
const ConvertNode = require("../utils/ConvertNode.js");
const JoinNode = require("../utils/JoinNode.js");
const SplitNode = require("../utils/SplitNode.js");
const SpriteSheetUVNode = require("../utils/SpriteSheetUVNode.js");
const MatcapUVNode = require("../utils/MatcapUVNode.js");
const OscNode = require("../utils/OscNode.js");
const TimerNode = require("../utils/TimerNode.js");
const CheckerNode = require("../procedural/CheckerNode.js");
const FogNode = require("../fog/FogNode.js");
const FogRangeNode = require("../fog/FogRangeNode.js");
const nodeLib = {
  // core
  ArrayUniformNode,
  AttributeNode,
  BypassNode,
  CodeNode,
  ContextNode,
  ConstNode,
  ExpressionNode,
  FunctionCallNode,
  FunctionNode,
  Node,
  NodeAttribute,
  NodeBuilder: NodeBuilder.default,
  NodeCode,
  NodeFrame,
  NodeFunctionInput,
  NodeKeywords,
  NodeUniform,
  NodeVar,
  NodeVary,
  PropertyNode,
  TempNode,
  UniformNode,
  VarNode,
  VaryNode,
  // accessors
  BufferNode,
  CameraNode,
  CubeTextureNode,
  MaterialNode,
  MaterialReferenceNode,
  ModelNode,
  ModelViewProjectionNode,
  NormalNode,
  Object3DNode,
  PointUVNode,
  PositionNode,
  ReferenceNode,
  ReflectNode,
  SkinningNode,
  TextureNode,
  UVNode,
  // display
  ColorSpaceNode: ColorSpaceNode.default,
  NormalMapNode,
  // math
  MathNode,
  OperatorNode,
  CondNode,
  // lights
  LightContextNode,
  LightNode,
  LightsNode,
  // utils
  ArrayElementNode,
  ConvertNode,
  JoinNode,
  SplitNode,
  SpriteSheetUVNode,
  MatcapUVNode,
  OscNode,
  TimerNode,
  // procedural
  CheckerNode,
  // fog
  FogNode,
  FogRangeNode
};
const fromType = (type2) => {
  return new nodeLib[type2]();
};
class NodeLoader extends THREE.Loader {
  constructor(manager) {
    super(manager);
    this.textures = {};
  }
  load(url, onLoad, onProgress, onError) {
    const loader = new FileLoader(this.manager);
    loader.setPath(this.path);
    loader.setRequestHeader(this.requestHeader);
    loader.setWithCredentials(this.withCredentials);
    loader.load(
      url,
      (text) => {
        try {
          onLoad(this.parse(JSON.parse(text)));
        } catch (e) {
          if (onError) {
            onError(e);
          } else {
            console.error(e);
          }
          this.manager.itemError(url);
        }
      },
      onProgress,
      onError
    );
  }
  parseNodes(json) {
    const nodes = {};
    if (json !== void 0) {
      for (const nodeJSON of json) {
        const { uuid, type: type2 } = nodeJSON;
        nodes[uuid] = fromType(type2);
        nodes[uuid].uuid = uuid;
      }
      const meta = { nodes, textures: this.textures };
      for (const nodeJSON of json) {
        nodeJSON.meta = meta;
        const node = nodes[nodeJSON.uuid];
        node.deserialize(nodeJSON);
        delete nodeJSON.meta;
      }
    }
    return nodes;
  }
  parse(json) {
    const node = fromType(type);
    node.uuid = json.uuid;
    const nodes = this.parseNodes(json.inputNodes);
    const meta = { nodes, textures: this.textures };
    json.meta = meta;
    node.deserialize(json);
    delete json.meta;
    return node;
  }
  setTextures(value) {
    this.textures = value;
    return this;
  }
}
module.exports = NodeLoader;
